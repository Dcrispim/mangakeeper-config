{"version":3,"sources":["i18n/languages/pt.ts","i18n/languages/messeges.ts","i18n/index.ts","components/HeaderMenu/styles.ts","components/HeaderMenu/index.tsx","utils/file.ts","components/SideMenu/index.tsx","components/GeneralPage/styles.ts","components/GeneralPage/index.tsx","components/MainContent/index.tsx","components/Home/styles.ts","components/Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["translations","pt","translation","General","Tags","Lists","All","Import","Download","messeges","i18next","use","LanguageDetector","init","debug","resources","defaultNS","fallbackLng","ns","i18n","text","t","Container","styled","div","HeaderMenu","className","Row","src","alt","Nav","activeKey","Item","Link","href","disabled","download","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","SideMenu","tab","onChange","onClick","HomePageContainer","ImportFile","callback","useState","listToImport","setListToImport","importType","setImportType","Form","Group","controlId","Control","fr","newlistToImport","JSON","parse","String","result","evt","tgt","target","files","console","log","FileReader","length","onload","name","readAsText","Select","value","aria-label","Button","config","lists","titles","toString","localStorage","setItem","stringify","location","reload","exportType","setExportType","variant","getItem","Date","getTime","style","width","title","defaultValue","HomePage","getLocalConfigs","homelist","statHomeList","setStartHomeList","startonlyread","setStartonlyread","onlyread","setOnlyread","tags","setTags","useEffect","mangaList","tagTitles","Object","keys","map","mangaName","categories","reduce","tagList","tagnamelist","newTagList","forEach","_t","Check","label","id","e","checked","FloatingLabel","sort","b","tag","height","handleChangeConfig","prop","GeneralPage","setTab","Users","MainContent","path","component","exact","THUMB_SIZE","TITLE_ITEM_BG","padding","img","side","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.133fc09a.chunk.js","sourcesContent":["const translations = {\n  pt: {\n    translation: {\n      General: \"Geral\",\n      Tags: \"Categorias\",\n      Lists: \"Listas\",\n      \"Only titles\": \"Somente títulos\",\n      \"Only lists\": \"Somente Listas\",\n      \"Only Settings\": \"Somente Configurações\",\n      All: \"Tudo\",\n      \"Home Page\": \"Página inicial\",\n      Import: \"Importar\",\n      Download: \"Baixar\",\n    },\n  },\n};\nexport default translations;\n","import pt from \"./pt\"\n\n\nconst messeges = {\n    ...pt\n}\n\nexport {messeges}","import i18next from \"i18next\";\nimport { messeges } from \"./languages/messeges\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18next.use(LanguageDetector).init({\n  debug: false,\n  resources: messeges,\n  defaultNS: \"translation\",\n  fallbackLng: \"pt\",\n  ns: [\"translation\"],\n});\n\nconst i18n = (text: string) => i18next.t(text);\n\nexport default i18n;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-self: center;\n  justify-content: center;\n  div.menu-tabs > div.nav {\n    background-color: #f1efef;\n    align-items: center;\n    justify-content: center;\n  }\n  div > img {\n    width: 300px;\n  }\n`;\n","import React from \"react\";\nimport i18n from \"../../i18n\";\nimport { Nav, Row } from \"react-bootstrap\";\n\nimport { Container } from \"./styles\";\n\nconst HeaderMenu: React.FC = () => {\n  return (\n    <Container className=\"\">\n      <Row className=\"justify-content-center\">\n        <img\n          src=\"/mangakeeper-config/logo512.png\"\n          alt=\"Logo MangaKeeper Config\"\n        />\n      </Row>\n      <div className=\"menu-tabs\">\n        <Nav activeKey=\"/home\">\n          <Nav.Item>\n            <Nav.Link href=\"#general\" >{i18n(\"General\")}</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"#tags\" disabled>{i18n(\"Tags\")}</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"#lists\" disabled>{i18n(\"Lists\")}</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </Container>\n  );\n};\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { MangaListType } from \"../types/MangasTypes\";\n\nexport const handleUpdateTitleList = (fr: FileReader) => {\n  const newSub: MangaListType = JSON.parse(String(fr.result));\n  localStorage.setItem(\"mangakeeper.toUpload\", JSON.stringify(newSub));\n};\n\n\nexport const getLocalFile =\n    (callback: (fr: FileReader, name?: string) => void) => (evt: React.ChangeEvent<HTMLInputElement>) => {\n      let tgt = evt.target;\n      let files = tgt?.files || [];\n      console.log(\"d\");\n      // FileReader support\n      if (FileReader && files && files.length) {\n        let fr = new FileReader();\n        fr.onload = () => callback(fr, files[0]?.name);\n        fr.readAsText(files[0]);\n      }\n    };\n\n    export function download(data: string, filename: string, type: string) {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob)\n          // IE10+\n          window.navigator.msSaveOrOpenBlob(file, filename);\n        else {\n          // Others\n          var a = document.createElement(\"a\"),\n            url = URL.createObjectURL(file);\n          a.href = url;\n          a.download = filename;\n          document.body.appendChild(a);\n          a.click();\n          setTimeout(function () {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n          }, 0);\n        }\n      }\n      ","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport i18n from \"../../i18n\";\n\nimport { Container } from \"./styles\";\n\nconst SideMenu: React.FC = ({ tab, onChange }) => {\n  return (\n    <ul className=\"list-group col-12 col-md-2 ml-2  \">\n      <li\n      \n        onClick={() => onChange(\"home\")}\n        className={`list-group-item ${tab === \"home\" ? \"active\" : \"\"}`}\n      >\n        {i18n(\"Home Page\")}\n      </li>\n      <li\n        onClick={() => onChange(\"import\")}\n        className={`list-group-item ${tab === \"import\" ? \"active\" : \"\"}`}\n      >\n        {i18n(\"Import\")}\n      </li>\n      <li\n        onClick={() => onChange(\"download\")}\n        className={`list-group-item  ${tab === \"download\" ? \"active\" : \"\"}`}\n      >\n        {i18n(\"Download\")}\n      </li>\n    </ul>\n  );\n};\n\nexport default SideMenu;\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  width: 100%;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Container, FloatingLabel, Form, Row } from \"react-bootstrap\";\nimport i18n from \"../../i18n\";\nimport { MangaListType } from \"../../types/MangasTypes\";\nimport {\n  download,\n  getLocalFile,\n  handleUpdateTitleList,\n} from \"../../utils/file\";\nimport SideMenu from \"../SideMenu\";\nimport { HomePageContainer } from \"./styles\";\n\nconst GeneralPage: React.FC = () => {\n  const [tab, setTab] = useState(\"import\");\n\n  return (\n    <Row>\n      <SideMenu tab={tab} onChange={setTab} />\n      <Container className=\"col-10 d-flex align-items-center justify-content-center \">\n        {tab === \"import\" ? (\n          <ImportFile />\n        ) : tab === \"download\" ? (\n          <Download />\n        ) : tab === \"home\" ? (\n          <HomePage />\n        ) : null}\n      </Container>\n    </Row>\n  );\n};\n\nconst ImportFile = () => {\n  const [listToImport, setListToImport] = useState({} as MangaListType);\n  const [importType, setImportType] = useState(\"1\");\n  const handleUpdateTitleList = (fr: FileReader) => {\n    const newlistToImport: MangaListType = JSON.parse(String(fr.result));\n    setListToImport(newlistToImport);\n  };\n\n  const handleChangeSelect = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n    setImportType(evt.target.value);\n  };\n\n  const handleSubmit = () => {\n    const {\n      \"mangakeeper.configs\": config,\n      \"mangakeeper.lists\": lists,\n      ...titles\n    } = listToImport;\n    if (importType.toString() === \"1\") {\n      localStorage.setItem(\"mangakeeper.toUpload\", JSON.stringify(titles));\n    }\n    if (importType.toString() === \"2\") {\n      localStorage.setItem(\"mangakeeper.toUpload\", JSON.stringify(lists || {}));\n    }\n    if (importType.toString() === \"3\") {\n      localStorage.setItem(\n        \"mangakeeper.toUpload\",\n        JSON.stringify(config || {})\n      );\n    }\n    if (importType.toString() === \"4\") {\n      localStorage.setItem(\n        \"mangakeeper.toUpload\",\n        JSON.stringify(listToImport || {})\n      );\n    }\n    window.location.reload();\n  };\n\n  return (\n    <Form.Group controlId=\"formFile\" className=\"mb-3 col-6 \">\n      <Form.Control\n        type=\"file\"\n        onChange={getLocalFile(handleUpdateTitleList)}\n        className=\"col-6\"\n      />\n      <Form.Select\n        value={importType}\n        onChange={handleChangeSelect}\n        aria-label=\"Default select example col-3\"\n      >\n        <option value=\"1\">{i18n(\"Only titles\")}</option>\n        <option value=\"2\">{i18n(\"Only Lists\")}</option>\n        <option value=\"3\">{i18n(\"Only Settings\")}</option>\n        <option value=\"4\">{i18n(\"All\")}</option>\n      </Form.Select>\n      <Button type=\"button\" onClick={handleSubmit}>\n        {i18n(\"Save\")}\n      </Button>\n    </Form.Group>\n  );\n};\n\nconst Download = () => {\n  const [exportType, setExportType] = useState(\"1\");\n  const handleSubmit = () => {\n    const listToImport = JSON.parse(\n      localStorage.getItem(\"mangakeeper.mangaList\") || \"{}\"\n    );\n    const {\n      \"mangakeeper.configs\": config,\n      \"mangakeeper.lists\": lists,\n      ...titles\n    } = listToImport;\n    if (exportType.toString() === \"1\") {\n      download(\n        JSON.stringify(titles),\n        `Readerlist_titles-${new Date().getTime()}.json`,\n        \"json\"\n      );\n    }\n    if (exportType.toString() === \"2\") {\n      download(\n        JSON.stringify(lists || {}),\n        `Readerlist_lists-${new Date().getTime()}.json`,\n        \"json\"\n      );\n    }\n    if (exportType.toString() === \"3\") {\n      download(\n        JSON.stringify(config || {}),\n        `Readerlist_config-${new Date().getTime()}.json`,\n        \"json\"\n      );\n    }\n    if (exportType.toString() === \"4\") {\n      localStorage.setItem(\n        \"mangakeeper.toUpload\",\n        JSON.stringify(listToImport || {})\n      );\n      download(\n        JSON.stringify(listToImport || {}),\n        `Readerlist-${new Date().getTime()}.json`,\n        \"json\"\n      );\n    }\n  };\n\n  const handleChangeSelect = (evt: React.ChangeEvent<HTMLSelectElement>) => {\n    setExportType(evt.target.value);\n  }\n\n  const handleDownload = () => {};\n  return (\n    <Form.Group>\n      <Button variant=\"secondary\" onClick={handleSubmit} className=\"col-12\">\n        <img\n          src=\"/mangakeeper-config/icons/import.png\"\n          alt=\"download\"\n          style={{ width: 24 }}\n          className=\"mr-3 mb-2\"\n          title={i18n(\"Donwload\")}\n        />\n      </Button>\n      <Form.Select onChange={handleChangeSelect} defaultValue=\"1\" aria-label=\"Default select example col-3\">\n        <option value=\"1\">{i18n(\"Only titles\")}</option>\n        <option value=\"2\">{i18n(\"Only lists\")}</option>\n        <option value=\"3\">{i18n(\"Only Settings\")}</option>\n        <option value=\"4\">{i18n(\"All\")}</option>\n      </Form.Select>\n\n    </Form.Group>\n  );\n};\n\nconst HomePage = () => {\n  const [statHomeList, setStartHomeList] = useState(\n    getLocalConfigs()?.homelist\n  );\n  const [startonlyread, setStartonlyread] = useState(\n    getLocalConfigs()?.startonlyread\n  );\n  const [onlyread, setOnlyread] = useState(getLocalConfigs()?.onlyread);\n  const [tags, setTags] = useState<{ [tag: string]: number }>({});\n\n  useEffect(() => {\n    const mangaList: MangaListType = JSON.parse(\n      localStorage.getItem(\"mangakeeper.mangaList\") || \"{}\"\n    );\n    const tagTitles = Object.keys(mangaList).map((mangaName) =>\n      mangaList[mangaName].categories?.map((t) => t.name)\n    );\n    setTags(\n      tagTitles.reduce((tagList, tagnamelist) => {\n        const newTagList = { ...tagList };\n        tagnamelist?.forEach((_t) => {\n          const t = i18n(_t);\n          newTagList[t] = (newTagList[t] || 0) + 1;\n        });\n\n        return newTagList;\n      }, {} as { [tag: string]: number })\n    );\n  }, []);\n\n  const handleChangeHomeList = (e: React.FormEvent<HTMLSelectElement>) => {\n    setStartHomeList(e.target.value);\n  };\n\n  const handleChangeOnlyRead = (e: React.FormEvent<HTMLInputElement>) => {\n    setOnlyread(e.target.checked);\n  };\n  const handleChangeStartOnlyRead = (e: React.FormEvent<HTMLInputElement>) => {\n    setStartonlyread(e.target.checked);\n  };\n\n  const handleSubmit = () => {\n    handleChangeConfig(\"homelist\", statHomeList);\n    handleChangeConfig(\"startonlyread\", startonlyread);\n    handleChangeConfig(\"onlyread\", onlyread === \"null\" ? false : onlyread);\n    window.location.reload();\n  };\n  return (\n    <HomePageContainer>\n      <Form>\n        <Form.Check\n          type=\"switch\"\n          label={i18n(\"Show only read titles\")}\n          id=\"config-read-titles\"\n          onChange={handleChangeOnlyRead}\n          checked={onlyread}\n        />\n        <Form.Check\n          type=\"switch\"\n          id=\"config-start-only-read\"\n          label={i18n(\"Add only when starting to read\")}\n          checked={startonlyread}\n          onChange={handleChangeStartOnlyRead}\n        />\n        <Row className=\"col-12\">\n          <FloatingLabel label={i18n(\"Display list:\")} className=\"col-md-4\">\n            <Form.Select\n              aria-label=\"Floating label select example\"\n              value={statHomeList}\n              id=\"config-home-list\"\n              onChange={handleChangeHomeList}\n            >\n              <option>{i18n(\"Select the home page list\")}</option>\n              <option disabled>-------{i18n(\"Lists\")}--------</option>\n              <option disabled>-------{i18n(\"Tags\")}--------</option>\n              {Object.keys(tags)\n                .sort((a, b) => (tags[a] > tags[b] ? -1 : 1))\n                .map((tag) => (\n                  <option key={`home-page-${tag}`} value={tag}>{`${i18n(\n                    tag\n                  )} (${tags[tag]})`}</option>\n                ))}\n            </Form.Select>\n          </FloatingLabel>\n          <div\n            onClick={() => setStartHomeList(\"null\")}\n            className=\"col-1 m-0 p-0 row align-content-center justify-content-center\"\n          >\n            <img\n              src=\"/mangakeeper-config/icons/clear.png\"\n              alt=\"download\"\n              style={{ width: 48, height: 24 }}\n              className=\"mr-3 mb-2\"\n              title={i18n(\"Donwload\")}\n            />\n          </div>\n        </Row>\n        <Button type=\"button\" onClick={handleSubmit}>\n          {i18n(\"Save\")}\n        </Button>\n      </Form>\n    </HomePageContainer>\n  );\n};\n\nconst handleChangeConfig = (prop: string, value: string | number | boolean) => {\n  const mangaList = JSON.parse(\n    localStorage.getItem(\"mangakeeper.toUpload\") || '{\"mangakeeper.configs\":{}}'\n  );\n\n  mangaList[\"mangakeeper.configs\"][prop] = value;\n  localStorage.setItem(\"mangakeeper.toUpload\", JSON.stringify(mangaList));\n};\n\nconst getLocalConfigs = () =>\n  JSON.parse(\n    localStorage.getItem(\"mangakeeper.mangaList\") ||\n      '{\"mangakeeper.configs\":{}}'\n  )[\"mangakeeper.configs\"];\nexport default GeneralPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport GeneralPage from \"../GeneralPage\";\n\n// import { Container } from './styles';\n\nconst MainContent: React.FC = () => {\n  return (\n    <Router>\n      <div>\n          <Route path=\"/general\" component={GeneralPage}></Route>\n          <Route path=\"/tags\" component={Users}>\n            <Users />\n          </Route>\n          <Route exact path=\"/\" component={GeneralPage}>\n          </Route>\n      </div>\n    </Router>\n  );\n};\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nexport default MainContent;\n","import styled from \"styled-components\";\n\nconst THUMB_SIZE = {\n  H: 180,\n  W: 116,\n};\n\nconst TITLE_ITEM_BG = \" #000a\";\n\nexport const SliderWrapper = styled.div`\n  width: 100%;\n  margin-top: 100px;\n\n  div h1 {\n    margin-bottom: 0px;\n    margin-left: 20px;\n  }\n`;\n\nexport const SliderContainer = styled.div`\n  display: grid;\n  margin-top: 16px;\n  grid-template-columns: 1fr 1fr 1fr;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  //scroll-snap-type: x mandatory;\n\n  -webkit-overflow-scrolling: touch;\n\n  scroll-behavior: smooth;\n  max-height: 600px;\n  min-height: 300px;\n\n  user-select: none;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Col = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SliderItemContainer = styled.div<{ padding: number }>`\n  @keyframes hover-img-in {\n    from {\n      transform: scale(1);\n    }\n    to {\n      transform: scale(1.2);\n    }\n  }\n  @keyframes hover-title-in {\n    from {\n      transform: scale(1);\n      opacity: 0%;\n    }\n    to {\n      transform: scale(1.2);\n      opacity: 100%;\n    }\n  }\n\n  @keyframes hover-img-out {\n    to {\n      transform: scale(1);\n    }\n    from {\n      transform: scale(1.2);\n    }\n  }\n  @keyframes hover-title-out {\n    to {\n      transform: scale(1);\n      opacity: 0%;\n    }\n    from {\n      transform: scale(1.2);\n      opacity: 100%;\n    }\n  }\n\n  width: ${({ padding }) => THUMB_SIZE.W + padding}px;\n  padding: 8px ${({ padding }) => padding}px;\n  //scroll-snap-align: start;\n  pointer-events: none;\n  div {\n    animation-name: hover-title-out;\n    animation-duration: 0.1s;\n  }\n\n  img {\n    animation-name: hover-img-out;\n    animation-duration: 0.1s;\n    align-self: baseline;\n    pointer-events: auto;\n  }\n\n  :hover {\n    img {\n      animation-name: hover-img-in;\n      animation-duration: 0.1s;\n      transform: scale(1.2);\n    }\n    div {\n      animation-name: hover-title-in;\n      animation-duration: 0.1s;\n\n      transform: scale(1.2);\n      opacity: 100%;\n    }\n  }\n`;\n\nexport const TitleItem = styled.div`\n  pointer-events: auto;\n  opacity: 0%;\n  display: flex;\n  pointer-events: auto;\n  position: relative;\n  margin-left: 4px;\n  //z-index: 1000;\n  width: ${THUMB_SIZE.W}px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${TITLE_ITEM_BG};\n\n  label {\n    font-size: 20px;\n    color: gray;\n    cursor: grab;\n    :hover {\n      color: white;\n    }\n  }\n  top: -24px;\n  align-self: center;\n  justify-content: space-around;\n`;\n\nexport const ThumbImg = styled.img`\n  //pointer-events: auto;\n  width: ${THUMB_SIZE.W}px;\n  height: ${THUMB_SIZE.H}px;\n  object-fit: cover;\n\n  background-color: #eee;\n  top: 0px !important;\n  //z-index: 10;\n\n  -webkit-user-drag: none;\n`;\n\nexport const SideButton = styled.div<{ side: \"left\" | \"right\" }>`\n  @keyframes btn-in {\n    from {\n      color: #fff1;\n      width: 3rem;\n    }\n    to {\n      background-color: ${TITLE_ITEM_BG};\n      color: #fff9;\n      width: 20rem;\n    }\n  }\n\n  @keyframes btn-out {\n    from {\n      background-color: ${TITLE_ITEM_BG};\n      width: 20rem;\n    }\n    to {\n      width: 3rem;\n    }\n  }\n  align-self: flex-end;\n  cursor: pointer;\n  display: flex;\n  //z-index: 100;\n\n  position: relative;\n  width: 3rem;\n  height: ${THUMB_SIZE.H}px;\n  ${({ side }) => `${side}: 0px;`}\n  animation-name: btn-out;\n  animation-duration: 0.2s;\n  :hover {\n    animation-name: btn-in;\n    animation-duration: 0.2s;\n    width: 20rem;\n    background-color: ${TITLE_ITEM_BG};\n    i {\n      color: #fff9;\n    }\n  }\n  justify-content: center;\n  i {\n    align-self: center;\n    font-size: 40px;\n    color: #fff1;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 8fr 2fr 2fr;\n  height: 24px;\n  margin-bottom: 16px;\n  h2 {\n    padding-left: 8px;\n    text-align: left;\n  }\n`;\nexport const PopUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  max-width: 500px;\n`;\n","import React, { useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport HeaderMenu from \"../HeaderMenu\";\nimport MainContent from \"../MainContent\";\nimport SideMenu from \"../SideMenu\";\nimport { Container, Row } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [chaps, setChaps] = useState({});\n\n  return (\n    <Container>\n      <HeaderMenu />\n      <MainContent />\n    </Container>\n  );\n};\n\nexport default Home;\n/* Object.keys(fantasy).map((title) => {\n        const data = fantasy[title];\n        return (\n          <Row>\n            <SliderItemContainer padding={8} key={key}>\n              <a href={data.link} target=\"blank\">\n                <ThumbImg src={data.thumb} />\n              </a>\n              <TitleItem>\n                <label>{\"details\"}</label>\n              </TitleItem>\n            </SliderItemContainer>\n           <Col>\n           <h2>{title} ({data.chapters})</h2>\n           \n           </Col>\n          </Row>\n        );\n      }) */\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n   <Home/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}